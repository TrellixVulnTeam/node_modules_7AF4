import React, { useState, useCallback, useEffect } from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';
import './accordion.scss';
import ArrowDown from '../../assets/images/arrowdown.png';
import ArrowUp from '../../assets/images/arrowup.png';
import Plus from '../../assets/images/plus.png';
import Minus from '../../assets/images/minus.png';

const Accordion = ({
    testId,
    className,
    logoClass,
    titleClass,
    titleRightIconClass,
    children,
    title,
    icon,
    disabled,
    isExpand,
    onClick,
    isArrow = false,
}) => {
    const [expand, setExpand] = useState(isExpand);
    const classname = 'met-accordion__';

    const toggle = useCallback(() => {
        if (!disabled) {
            setExpand((expand) => !expand);
        }
        if (onClick) {
            onClick();
        }
    }, [disabled, setExpand]);

    useEffect(() => setExpand(isExpand), [isExpand]);

    return (
        <div data-testid={testId ?? 'accordion'} className={cn(`${classname}box`, className)}>
            <div
                data-testid={testId ? `${testId}-title` : 'accordion-title'}
                className={`${classname}title-box`}
                onClick={toggle}
            >
                <div className={`${classname}left`}>
                    {icon && <img className={cn(`${classname}iconDim`, logoClass)} src={icon} />}
                    <span className={cn(`${classname}title`, titleClass)}>{title}</span>
                </div>
                {!disabled && (
                    <span className={cn(`${classname}right`, titleRightIconClass)}>
                        {!expand ? (
                            <img
                                className={`${classname}expand`}
                                src={isArrow ? ArrowDown : Plus}
                            />
                        ) : (
                            <img
                                className={`${classname}expand`}
                                src={isArrow ? ArrowUp : Minus}
                            />
                        )}
                    </span>
                )}
            </div>
            {expand && (
                <div
                    data-testid={testId ? `${testId}-content` : 'accordion-content'}
                    className={`${classname}content`}
                >
                    {children}
                </div>
            )}
        </div>
    );
};

Accordion.propTypes = {
    testId: PropTypes.string,
    logoClass: PropTypes.string,
    titleClass: PropTypes.string,
    titleRightIconClass: PropTypes.string,
    logo: PropTypes.string,
    className: PropTypes.string,
    title: PropTypes.string,
    isExpand: PropTypes.bool,
    icon: PropTypes.string,
    disabled: PropTypes.bool,
    onClick: PropTypes.func,
};

export default Accordion;
