import React from "react";
import { render, fireEvent, cleanup } from "@testing-library/react";
import "@testing-library/jest-dom";
import Table from "../table";
import { it, expect, afterEach } from "@jest/globals";

afterEach(cleanup);

const DUMMY_TABLE_DATA = [
  {
    propspectsName: "Harry Kane",
    productName: "Live Life Premier",
    lastUpdated: <div className="test">12/05/2019</div>,
    status: <a href="#">Pending Premium</a>,
  },
  {
    propspectsName: "Casdan Moro",
    productName: "Live Life Premier",
    lastUpdated: <div className="test">12/05/2019</div>,
    status: <a href="#">Pending Premium</a>,
  },
  {
    propspectsName: "Casdan Moro",
    productName: "Investor Advantage Premier",
    lastUpdated: <div className="test">5/01/2019</div>,
    status: <a href="#">Pending Premium</a>,
  },
  {
    propspectsName: "Marissa Moore",
    productName: "Live Life Premier",
    lastUpdated: <div className="test">6/05/2019</div>,
    status: <a href="#">Pending Premium</a>,
  },
];

const DUMMY_COLUMNS = [
  {
    label: "Prospects Name",
    value: "propspectsName",
  },
  {
    label: "Product Name",
    value: "productName",
  },
  {
    label: "Last Updated",
    value: "lastUpdated",
  },
  {
    label: "Status",
    value: "status",
  },
];

const DUMMY_SORT_LIST = [
  {
    label: "Recent Activity (Newest)",
    value: "lastUpdated",
  },
  {
    label: "Status",
    value: "status",
  },
];

it("renders correctly", async () => {
  const { getByTestId, getByText } = render(
    <Table
      className="testClassName"
      dataList={DUMMY_TABLE_DATA}
      columns={DUMMY_COLUMNS}
      onRowClick={() => console.log("testConsole")}
      sortList={DUMMY_SORT_LIST}
      onSort={() => console.log("sortConsole")}
    />
  );
  const table = getByTestId("table");
  const sortDropdown = getByTestId("dropdown-icon");
  const columns = table.querySelectorAll(".met-table__header-cell");
  const hasMore = table.querySelector(".met-table__body-icon");

  columns.forEach((column, idx) => {
    expect(column.textContent).toContain(DUMMY_COLUMNS[idx].label);
  });

  expect(table).toHaveClass("met-table", "testClassName");

  await fireEvent.click(hasMore);

  expect(global.console.log).toHaveBeenCalledWith("testConsole");

  await fireEvent.click(sortDropdown);

  await fireEvent.click(getByText("Recent Activity (Newest)"));

  expect(global.console.log).toHaveBeenCalledWith("sortConsole");
});
