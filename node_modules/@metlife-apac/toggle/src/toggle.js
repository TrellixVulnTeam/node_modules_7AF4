import React, { useState, useEffect } from 'react';
import './toggle.scss';
import cn from 'classnames';
import PropTypes from 'prop-types';

const Toggle = ({ testId, checked, containerClass, disabledSwitch, onValueChange, onText, offText }) => {
    const [toggleState, setToggleState] = useState(checked);
    const elementId = testId && testId != '' ? testId : 'toggleSwitch';

    useEffect(() => {
        document.getElementById(elementId).addEventListener('keyup', (a) => {
            if (a.keyCode == 9) {
                document.getElementById(elementId).classList.add(`met-switch__keyPress`)
            }
        }, false);
        document.getElementById(elementId).addEventListener('keydown', (a) => {
            if (a.keyCode == 9) {
                document.getElementById(elementId).classList.remove(`met-switch__keyPress`)
            }
        }, false);
        document.getElementById(elementId).addEventListener('mousedown', (a) => {
            a.preventDefault();
        });
  
        return () => {
            document.getElementById(elementId).removeEventListener('keyup',null);
            document.getElementById(elementId).removeEventListener('keydown',null);
            document.getElementById(elementId).removeEventListener('mousedown',null);
        }
    }, []);

    const onToggleValueChange = () => {
        setToggleState(!toggleState);
        if (onValueChange) {
            onValueChange(!toggleState);
        }
    };

    return (
        <div
            id={elementId}
            data-testid={elementId}
            className={cn('met-switch', containerClass)}
            tabIndex={0}
        >
            <label
                className={
                    disabledSwitch ? 'met-switch__switchdisabled' : 'met-switch__switchenabled'
                }
            >
                <input type='checkbox' checked={toggleState} disabled={disabledSwitch} />
                <div
                    data-testid='toggleSwitch'
                    className='slider round'
                    onClick={onToggleValueChange}
                >
                    <label className='on'>{onText}</label>
                    <label className='off'>{offText}</label>
                </div>
            </label>
        </div>
    );
};

Toggle.propTypes = {
    testId: PropTypes.string,
    checked: PropTypes.bool,
    containerClass: PropTypes.string,
    disabledSwitch: PropTypes.bool,
    onValueChange: PropTypes.func,
    onText: PropTypes.string,
    offText: PropTypes.string
};

Toggle.defaultProps = {};

export default Toggle;
